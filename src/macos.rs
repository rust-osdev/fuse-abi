/* automatically generated by rust-bindgen 0.69.4 */

#[repr(transparent)]
#[derive(Default)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct __IncompleteArrayField<T>(::core::marker::PhantomData<T>, [T; 0]);
impl<T> __IncompleteArrayField<T> {
    #[inline]
    pub const fn new() -> Self {
        __IncompleteArrayField(::core::marker::PhantomData, [])
    }
    #[inline]
    pub fn as_ptr(&self) -> *const T {
        self as *const _ as *const T
    }
    #[inline]
    pub fn as_mut_ptr(&mut self) -> *mut T {
        self as *mut _ as *mut T
    }
    #[inline]
    pub unsafe fn as_slice(&self, len: usize) -> &[T] {
        ::core::slice::from_raw_parts(self.as_ptr(), len)
    }
    #[inline]
    pub unsafe fn as_mut_slice(&mut self, len: usize) -> &mut [T] {
        ::core::slice::from_raw_parts_mut(self.as_mut_ptr(), len)
    }
}
impl<T> ::core::fmt::Debug for __IncompleteArrayField<T> {
    fn fmt(&self, fmt: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        fmt.write_str("__IncompleteArrayField")
    }
}
pub const FUSE_KERNEL_VERSION: u32 = 7;
pub const FUSE_KERNEL_MINOR_VERSION: u32 = 19;
pub const FUSE_ROOT_ID: u64 = 1;
pub const FATTR_MODE: u32 = 1;
pub const FATTR_UID: u32 = 2;
pub const FATTR_GID: u32 = 4;
pub const FATTR_SIZE: u32 = 8;
pub const FATTR_ATIME: u32 = 16;
pub const FATTR_MTIME: u32 = 32;
pub const FATTR_FH: u32 = 64;
pub const FATTR_ATIME_NOW: u32 = 128;
pub const FATTR_MTIME_NOW: u32 = 256;
pub const FATTR_LOCKOWNER: u32 = 512;
pub const FATTR_CRTIME: u32 = 268435456;
pub const FATTR_CHGTIME: u32 = 536870912;
pub const FATTR_BKUPTIME: u32 = 1073741824;
pub const FATTR_FLAGS: u32 = 2147483648;
pub const FOPEN_DIRECT_IO: u32 = 1;
pub const FOPEN_KEEP_CACHE: u32 = 2;
pub const FOPEN_NONSEEKABLE: u32 = 4;
pub const FOPEN_PURGE_ATTR: u32 = 1073741824;
pub const FOPEN_PURGE_UBC: u32 = 2147483648;
pub const FUSE_ASYNC_READ: u32 = 1;
pub const FUSE_POSIX_LOCKS: u32 = 2;
pub const FUSE_FILE_OPS: u32 = 4;
pub const FUSE_ATOMIC_O_TRUNC: u32 = 8;
pub const FUSE_EXPORT_SUPPORT: u32 = 16;
pub const FUSE_BIG_WRITES: u32 = 32;
pub const FUSE_DONT_MASK: u32 = 64;
pub const FUSE_FLOCK_LOCKS: u32 = 1024;
pub const FUSE_ACCESS_EXTENDED: u32 = 8388608;
pub const FUSE_NODE_RWLOCK: u32 = 16777216;
pub const FUSE_RENAME_SWAP: u32 = 33554432;
pub const FUSE_RENAME_EXCL: u32 = 67108864;
pub const FUSE_ALLOCATE: u32 = 134217728;
pub const FUSE_EXCHANGE_DATA: u32 = 268435456;
pub const FUSE_CASE_INSENSITIVE: u32 = 536870912;
pub const FUSE_VOL_RENAME: u32 = 1073741824;
pub const FUSE_XTIMES: u32 = 2147483648;
pub const CUSE_UNRESTRICTED_IOCTL: u32 = 1;
pub const FUSE_RELEASE_FLUSH: u32 = 1;
pub const FUSE_RELEASE_FLOCK_UNLOCK: u32 = 2;
pub const FUSE_GETATTR_FH: u32 = 1;
pub const FUSE_LK_FLOCK: u32 = 1;
pub const FUSE_WRITE_CACHE: u32 = 1;
pub const FUSE_WRITE_LOCKOWNER: u32 = 2;
pub const FUSE_READ_LOCKOWNER: u32 = 2;
pub const FUSE_IOCTL_COMPAT: u32 = 1;
pub const FUSE_IOCTL_UNRESTRICTED: u32 = 2;
pub const FUSE_IOCTL_RETRY: u32 = 4;
pub const FUSE_IOCTL_32BIT: u32 = 8;
pub const FUSE_IOCTL_DIR: u32 = 16;
pub const FUSE_IOCTL_MAX_IOV: u32 = 256;
pub const FUSE_POLL_SCHEDULE_NOTIFY: u32 = 1;
pub const FUSE_MIN_READ_BUFFER: u32 = 8192;
pub const FUSE_COMPAT_ENTRY_OUT_SIZE: u32 = 136;
pub const FUSE_COMPAT_ATTR_OUT_SIZE: u32 = 112;
pub const FUSE_COMPAT_MKNOD_IN_SIZE: u32 = 8;
pub const FUSE_COMPAT_RENAME_IN_SIZE: u32 = 8;
pub const FUSE_COMPAT_WRITE_IN_SIZE: u32 = 24;
pub const FUSE_COMPAT_STATFS_SIZE: u32 = 48;
pub const CUSE_INIT_INFO_MAX: u32 = 4096;
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_attr {
    pub ino: u64,
    pub size: u64,
    pub blocks: u64,
    pub atime: u64,
    pub mtime: u64,
    pub ctime: u64,
    pub crtime: u64,
    pub atimensec: u32,
    pub mtimensec: u32,
    pub ctimensec: u32,
    pub crtimensec: u32,
    pub mode: u32,
    pub nlink: u32,
    pub uid: u32,
    pub gid: u32,
    pub rdev: u32,
    pub flags: u32,
    pub blksize: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_attr"][::core::mem::size_of::<fuse_attr>() - 104usize];
    ["Alignment of fuse_attr"][::core::mem::align_of::<fuse_attr>() - 8usize];
    ["Offset of field: fuse_attr::ino"][::core::mem::offset_of!(fuse_attr, ino) - 0usize];
    ["Offset of field: fuse_attr::size"][::core::mem::offset_of!(fuse_attr, size) - 8usize];
    ["Offset of field: fuse_attr::blocks"][::core::mem::offset_of!(fuse_attr, blocks) - 16usize];
    ["Offset of field: fuse_attr::atime"][::core::mem::offset_of!(fuse_attr, atime) - 24usize];
    ["Offset of field: fuse_attr::mtime"][::core::mem::offset_of!(fuse_attr, mtime) - 32usize];
    ["Offset of field: fuse_attr::ctime"][::core::mem::offset_of!(fuse_attr, ctime) - 40usize];
    ["Offset of field: fuse_attr::crtime"][::core::mem::offset_of!(fuse_attr, crtime) - 48usize];
    ["Offset of field: fuse_attr::atimensec"]
        [::core::mem::offset_of!(fuse_attr, atimensec) - 56usize];
    ["Offset of field: fuse_attr::mtimensec"]
        [::core::mem::offset_of!(fuse_attr, mtimensec) - 60usize];
    ["Offset of field: fuse_attr::ctimensec"]
        [::core::mem::offset_of!(fuse_attr, ctimensec) - 64usize];
    ["Offset of field: fuse_attr::crtimensec"]
        [::core::mem::offset_of!(fuse_attr, crtimensec) - 68usize];
    ["Offset of field: fuse_attr::mode"][::core::mem::offset_of!(fuse_attr, mode) - 72usize];
    ["Offset of field: fuse_attr::nlink"][::core::mem::offset_of!(fuse_attr, nlink) - 76usize];
    ["Offset of field: fuse_attr::uid"][::core::mem::offset_of!(fuse_attr, uid) - 80usize];
    ["Offset of field: fuse_attr::gid"][::core::mem::offset_of!(fuse_attr, gid) - 84usize];
    ["Offset of field: fuse_attr::rdev"][::core::mem::offset_of!(fuse_attr, rdev) - 88usize];
    ["Offset of field: fuse_attr::flags"][::core::mem::offset_of!(fuse_attr, flags) - 92usize];
    ["Offset of field: fuse_attr::blksize"][::core::mem::offset_of!(fuse_attr, blksize) - 96usize];
    ["Offset of field: fuse_attr::padding"][::core::mem::offset_of!(fuse_attr, padding) - 100usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_kstatfs {
    pub blocks: u64,
    pub bfree: u64,
    pub bavail: u64,
    pub files: u64,
    pub ffree: u64,
    pub bsize: u32,
    pub namelen: u32,
    pub frsize: u32,
    pub padding: u32,
    pub spare: [u32; 6usize],
}
const _: () = {
    ["Size of fuse_kstatfs"][::core::mem::size_of::<fuse_kstatfs>() - 80usize];
    ["Alignment of fuse_kstatfs"][::core::mem::align_of::<fuse_kstatfs>() - 8usize];
    ["Offset of field: fuse_kstatfs::blocks"]
        [::core::mem::offset_of!(fuse_kstatfs, blocks) - 0usize];
    ["Offset of field: fuse_kstatfs::bfree"][::core::mem::offset_of!(fuse_kstatfs, bfree) - 8usize];
    ["Offset of field: fuse_kstatfs::bavail"]
        [::core::mem::offset_of!(fuse_kstatfs, bavail) - 16usize];
    ["Offset of field: fuse_kstatfs::files"]
        [::core::mem::offset_of!(fuse_kstatfs, files) - 24usize];
    ["Offset of field: fuse_kstatfs::ffree"]
        [::core::mem::offset_of!(fuse_kstatfs, ffree) - 32usize];
    ["Offset of field: fuse_kstatfs::bsize"]
        [::core::mem::offset_of!(fuse_kstatfs, bsize) - 40usize];
    ["Offset of field: fuse_kstatfs::namelen"]
        [::core::mem::offset_of!(fuse_kstatfs, namelen) - 44usize];
    ["Offset of field: fuse_kstatfs::frsize"]
        [::core::mem::offset_of!(fuse_kstatfs, frsize) - 48usize];
    ["Offset of field: fuse_kstatfs::padding"]
        [::core::mem::offset_of!(fuse_kstatfs, padding) - 52usize];
    ["Offset of field: fuse_kstatfs::spare"]
        [::core::mem::offset_of!(fuse_kstatfs, spare) - 56usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_file_lock {
    pub start: u64,
    pub end: u64,
    pub type_: u32,
    pub pid: u32,
}
const _: () = {
    ["Size of fuse_file_lock"][::core::mem::size_of::<fuse_file_lock>() - 24usize];
    ["Alignment of fuse_file_lock"][::core::mem::align_of::<fuse_file_lock>() - 8usize];
    ["Offset of field: fuse_file_lock::start"]
        [::core::mem::offset_of!(fuse_file_lock, start) - 0usize];
    ["Offset of field: fuse_file_lock::end"][::core::mem::offset_of!(fuse_file_lock, end) - 8usize];
    ["Offset of field: fuse_file_lock::type_"]
        [::core::mem::offset_of!(fuse_file_lock, type_) - 16usize];
    ["Offset of field: fuse_file_lock::pid"]
        [::core::mem::offset_of!(fuse_file_lock, pid) - 20usize];
};
#[repr(u32)]
#[non_exhaustive]
#[cfg_attr(
    feature = "num_enum",
    derive(
        num_enum::IntoPrimitive,
        num_enum::TryFromPrimitive,
        num_enum::UnsafeFromPrimitive
    )
)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum fuse_opcode {
    FUSE_LOOKUP = 1,
    FUSE_FORGET = 2,
    FUSE_GETATTR = 3,
    FUSE_SETATTR = 4,
    FUSE_READLINK = 5,
    FUSE_SYMLINK = 6,
    FUSE_MKNOD = 8,
    FUSE_MKDIR = 9,
    FUSE_UNLINK = 10,
    FUSE_RMDIR = 11,
    FUSE_RENAME = 12,
    FUSE_LINK = 13,
    FUSE_OPEN = 14,
    FUSE_READ = 15,
    FUSE_WRITE = 16,
    FUSE_STATFS = 17,
    FUSE_RELEASE = 18,
    FUSE_FSYNC = 20,
    FUSE_SETXATTR = 21,
    FUSE_GETXATTR = 22,
    FUSE_LISTXATTR = 23,
    FUSE_REMOVEXATTR = 24,
    FUSE_FLUSH = 25,
    FUSE_INIT = 26,
    FUSE_OPENDIR = 27,
    FUSE_READDIR = 28,
    FUSE_RELEASEDIR = 29,
    FUSE_FSYNCDIR = 30,
    FUSE_GETLK = 31,
    FUSE_SETLK = 32,
    FUSE_SETLKW = 33,
    FUSE_ACCESS = 34,
    FUSE_CREATE = 35,
    FUSE_INTERRUPT = 36,
    FUSE_BMAP = 37,
    FUSE_DESTROY = 38,
    FUSE_IOCTL = 39,
    FUSE_POLL = 40,
    FUSE_NOTIFY_REPLY = 41,
    FUSE_BATCH_FORGET = 42,
    FUSE_FALLOCATE = 43,
    FUSE_SETVOLNAME = 61,
    FUSE_GETXTIMES = 62,
    FUSE_EXCHANGE = 63,
    CUSE_INIT = 4096,
}
#[repr(u32)]
#[non_exhaustive]
#[cfg_attr(
    feature = "num_enum",
    derive(
        num_enum::IntoPrimitive,
        num_enum::TryFromPrimitive,
        num_enum::UnsafeFromPrimitive
    )
)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum fuse_notify_code {
    FUSE_NOTIFY_POLL = 1,
    FUSE_NOTIFY_INVAL_INODE = 2,
    FUSE_NOTIFY_INVAL_ENTRY = 3,
    FUSE_NOTIFY_STORE = 4,
    FUSE_NOTIFY_RETRIEVE = 5,
    FUSE_NOTIFY_DELETE = 6,
    FUSE_NOTIFY_CODE_MAX = 7,
}
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_entry_out {
    pub nodeid: u64,
    pub generation: u64,
    pub entry_valid: u64,
    pub attr_valid: u64,
    pub entry_valid_nsec: u32,
    pub attr_valid_nsec: u32,
    pub attr: fuse_attr,
}
const _: () = {
    ["Size of fuse_entry_out"][::core::mem::size_of::<fuse_entry_out>() - 144usize];
    ["Alignment of fuse_entry_out"][::core::mem::align_of::<fuse_entry_out>() - 8usize];
    ["Offset of field: fuse_entry_out::nodeid"]
        [::core::mem::offset_of!(fuse_entry_out, nodeid) - 0usize];
    ["Offset of field: fuse_entry_out::generation"]
        [::core::mem::offset_of!(fuse_entry_out, generation) - 8usize];
    ["Offset of field: fuse_entry_out::entry_valid"]
        [::core::mem::offset_of!(fuse_entry_out, entry_valid) - 16usize];
    ["Offset of field: fuse_entry_out::attr_valid"]
        [::core::mem::offset_of!(fuse_entry_out, attr_valid) - 24usize];
    ["Offset of field: fuse_entry_out::entry_valid_nsec"]
        [::core::mem::offset_of!(fuse_entry_out, entry_valid_nsec) - 32usize];
    ["Offset of field: fuse_entry_out::attr_valid_nsec"]
        [::core::mem::offset_of!(fuse_entry_out, attr_valid_nsec) - 36usize];
    ["Offset of field: fuse_entry_out::attr"]
        [::core::mem::offset_of!(fuse_entry_out, attr) - 40usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_forget_in {
    pub nlookup: u64,
}
const _: () = {
    ["Size of fuse_forget_in"][::core::mem::size_of::<fuse_forget_in>() - 8usize];
    ["Alignment of fuse_forget_in"][::core::mem::align_of::<fuse_forget_in>() - 8usize];
    ["Offset of field: fuse_forget_in::nlookup"]
        [::core::mem::offset_of!(fuse_forget_in, nlookup) - 0usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_forget_one {
    pub nodeid: u64,
    pub nlookup: u64,
}
const _: () = {
    ["Size of fuse_forget_one"][::core::mem::size_of::<fuse_forget_one>() - 16usize];
    ["Alignment of fuse_forget_one"][::core::mem::align_of::<fuse_forget_one>() - 8usize];
    ["Offset of field: fuse_forget_one::nodeid"]
        [::core::mem::offset_of!(fuse_forget_one, nodeid) - 0usize];
    ["Offset of field: fuse_forget_one::nlookup"]
        [::core::mem::offset_of!(fuse_forget_one, nlookup) - 8usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_batch_forget_in {
    pub count: u32,
    pub dummy: u32,
}
const _: () = {
    ["Size of fuse_batch_forget_in"][::core::mem::size_of::<fuse_batch_forget_in>() - 8usize];
    ["Alignment of fuse_batch_forget_in"][::core::mem::align_of::<fuse_batch_forget_in>() - 4usize];
    ["Offset of field: fuse_batch_forget_in::count"]
        [::core::mem::offset_of!(fuse_batch_forget_in, count) - 0usize];
    ["Offset of field: fuse_batch_forget_in::dummy"]
        [::core::mem::offset_of!(fuse_batch_forget_in, dummy) - 4usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_getattr_in {
    pub getattr_flags: u32,
    pub dummy: u32,
    pub fh: u64,
}
const _: () = {
    ["Size of fuse_getattr_in"][::core::mem::size_of::<fuse_getattr_in>() - 16usize];
    ["Alignment of fuse_getattr_in"][::core::mem::align_of::<fuse_getattr_in>() - 8usize];
    ["Offset of field: fuse_getattr_in::getattr_flags"]
        [::core::mem::offset_of!(fuse_getattr_in, getattr_flags) - 0usize];
    ["Offset of field: fuse_getattr_in::dummy"]
        [::core::mem::offset_of!(fuse_getattr_in, dummy) - 4usize];
    ["Offset of field: fuse_getattr_in::fh"][::core::mem::offset_of!(fuse_getattr_in, fh) - 8usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_attr_out {
    pub attr_valid: u64,
    pub attr_valid_nsec: u32,
    pub dummy: u32,
    pub attr: fuse_attr,
}
const _: () = {
    ["Size of fuse_attr_out"][::core::mem::size_of::<fuse_attr_out>() - 120usize];
    ["Alignment of fuse_attr_out"][::core::mem::align_of::<fuse_attr_out>() - 8usize];
    ["Offset of field: fuse_attr_out::attr_valid"]
        [::core::mem::offset_of!(fuse_attr_out, attr_valid) - 0usize];
    ["Offset of field: fuse_attr_out::attr_valid_nsec"]
        [::core::mem::offset_of!(fuse_attr_out, attr_valid_nsec) - 8usize];
    ["Offset of field: fuse_attr_out::dummy"]
        [::core::mem::offset_of!(fuse_attr_out, dummy) - 12usize];
    ["Offset of field: fuse_attr_out::attr"]
        [::core::mem::offset_of!(fuse_attr_out, attr) - 16usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_getxtimes_out {
    pub bkuptime: u64,
    pub crtime: u64,
    pub bkuptimensec: u32,
    pub crtimensec: u32,
}
const _: () = {
    ["Size of fuse_getxtimes_out"][::core::mem::size_of::<fuse_getxtimes_out>() - 24usize];
    ["Alignment of fuse_getxtimes_out"][::core::mem::align_of::<fuse_getxtimes_out>() - 8usize];
    ["Offset of field: fuse_getxtimes_out::bkuptime"]
        [::core::mem::offset_of!(fuse_getxtimes_out, bkuptime) - 0usize];
    ["Offset of field: fuse_getxtimes_out::crtime"]
        [::core::mem::offset_of!(fuse_getxtimes_out, crtime) - 8usize];
    ["Offset of field: fuse_getxtimes_out::bkuptimensec"]
        [::core::mem::offset_of!(fuse_getxtimes_out, bkuptimensec) - 16usize];
    ["Offset of field: fuse_getxtimes_out::crtimensec"]
        [::core::mem::offset_of!(fuse_getxtimes_out, crtimensec) - 20usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_mknod_in {
    pub mode: u32,
    pub rdev: u32,
    pub umask: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_mknod_in"][::core::mem::size_of::<fuse_mknod_in>() - 16usize];
    ["Alignment of fuse_mknod_in"][::core::mem::align_of::<fuse_mknod_in>() - 4usize];
    ["Offset of field: fuse_mknod_in::mode"][::core::mem::offset_of!(fuse_mknod_in, mode) - 0usize];
    ["Offset of field: fuse_mknod_in::rdev"][::core::mem::offset_of!(fuse_mknod_in, rdev) - 4usize];
    ["Offset of field: fuse_mknod_in::umask"]
        [::core::mem::offset_of!(fuse_mknod_in, umask) - 8usize];
    ["Offset of field: fuse_mknod_in::padding"]
        [::core::mem::offset_of!(fuse_mknod_in, padding) - 12usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_mkdir_in {
    pub mode: u32,
    pub umask: u32,
}
const _: () = {
    ["Size of fuse_mkdir_in"][::core::mem::size_of::<fuse_mkdir_in>() - 8usize];
    ["Alignment of fuse_mkdir_in"][::core::mem::align_of::<fuse_mkdir_in>() - 4usize];
    ["Offset of field: fuse_mkdir_in::mode"][::core::mem::offset_of!(fuse_mkdir_in, mode) - 0usize];
    ["Offset of field: fuse_mkdir_in::umask"]
        [::core::mem::offset_of!(fuse_mkdir_in, umask) - 4usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_rename_in {
    pub newdir: u64,
    pub flags: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_rename_in"][::core::mem::size_of::<fuse_rename_in>() - 16usize];
    ["Alignment of fuse_rename_in"][::core::mem::align_of::<fuse_rename_in>() - 8usize];
    ["Offset of field: fuse_rename_in::newdir"]
        [::core::mem::offset_of!(fuse_rename_in, newdir) - 0usize];
    ["Offset of field: fuse_rename_in::flags"]
        [::core::mem::offset_of!(fuse_rename_in, flags) - 8usize];
    ["Offset of field: fuse_rename_in::padding"]
        [::core::mem::offset_of!(fuse_rename_in, padding) - 12usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_exchange_in {
    pub olddir: u64,
    pub newdir: u64,
    pub options: u64,
}
const _: () = {
    ["Size of fuse_exchange_in"][::core::mem::size_of::<fuse_exchange_in>() - 24usize];
    ["Alignment of fuse_exchange_in"][::core::mem::align_of::<fuse_exchange_in>() - 8usize];
    ["Offset of field: fuse_exchange_in::olddir"]
        [::core::mem::offset_of!(fuse_exchange_in, olddir) - 0usize];
    ["Offset of field: fuse_exchange_in::newdir"]
        [::core::mem::offset_of!(fuse_exchange_in, newdir) - 8usize];
    ["Offset of field: fuse_exchange_in::options"]
        [::core::mem::offset_of!(fuse_exchange_in, options) - 16usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_link_in {
    pub oldnodeid: u64,
}
const _: () = {
    ["Size of fuse_link_in"][::core::mem::size_of::<fuse_link_in>() - 8usize];
    ["Alignment of fuse_link_in"][::core::mem::align_of::<fuse_link_in>() - 8usize];
    ["Offset of field: fuse_link_in::oldnodeid"]
        [::core::mem::offset_of!(fuse_link_in, oldnodeid) - 0usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_setattr_in {
    pub valid: u32,
    pub padding: u32,
    pub fh: u64,
    pub size: u64,
    pub lock_owner: u64,
    pub atime: u64,
    pub mtime: u64,
    pub unused2: u64,
    pub atimensec: u32,
    pub mtimensec: u32,
    pub unused3: u32,
    pub mode: u32,
    pub unused4: u32,
    pub uid: u32,
    pub gid: u32,
    pub unused5: u32,
    pub bkuptime: u64,
    pub chgtime: u64,
    pub crtime: u64,
    pub bkuptimensec: u32,
    pub chgtimensec: u32,
    pub crtimensec: u32,
    pub flags: u32,
}
const _: () = {
    ["Size of fuse_setattr_in"][::core::mem::size_of::<fuse_setattr_in>() - 128usize];
    ["Alignment of fuse_setattr_in"][::core::mem::align_of::<fuse_setattr_in>() - 8usize];
    ["Offset of field: fuse_setattr_in::valid"]
        [::core::mem::offset_of!(fuse_setattr_in, valid) - 0usize];
    ["Offset of field: fuse_setattr_in::padding"]
        [::core::mem::offset_of!(fuse_setattr_in, padding) - 4usize];
    ["Offset of field: fuse_setattr_in::fh"][::core::mem::offset_of!(fuse_setattr_in, fh) - 8usize];
    ["Offset of field: fuse_setattr_in::size"]
        [::core::mem::offset_of!(fuse_setattr_in, size) - 16usize];
    ["Offset of field: fuse_setattr_in::lock_owner"]
        [::core::mem::offset_of!(fuse_setattr_in, lock_owner) - 24usize];
    ["Offset of field: fuse_setattr_in::atime"]
        [::core::mem::offset_of!(fuse_setattr_in, atime) - 32usize];
    ["Offset of field: fuse_setattr_in::mtime"]
        [::core::mem::offset_of!(fuse_setattr_in, mtime) - 40usize];
    ["Offset of field: fuse_setattr_in::unused2"]
        [::core::mem::offset_of!(fuse_setattr_in, unused2) - 48usize];
    ["Offset of field: fuse_setattr_in::atimensec"]
        [::core::mem::offset_of!(fuse_setattr_in, atimensec) - 56usize];
    ["Offset of field: fuse_setattr_in::mtimensec"]
        [::core::mem::offset_of!(fuse_setattr_in, mtimensec) - 60usize];
    ["Offset of field: fuse_setattr_in::unused3"]
        [::core::mem::offset_of!(fuse_setattr_in, unused3) - 64usize];
    ["Offset of field: fuse_setattr_in::mode"]
        [::core::mem::offset_of!(fuse_setattr_in, mode) - 68usize];
    ["Offset of field: fuse_setattr_in::unused4"]
        [::core::mem::offset_of!(fuse_setattr_in, unused4) - 72usize];
    ["Offset of field: fuse_setattr_in::uid"]
        [::core::mem::offset_of!(fuse_setattr_in, uid) - 76usize];
    ["Offset of field: fuse_setattr_in::gid"]
        [::core::mem::offset_of!(fuse_setattr_in, gid) - 80usize];
    ["Offset of field: fuse_setattr_in::unused5"]
        [::core::mem::offset_of!(fuse_setattr_in, unused5) - 84usize];
    ["Offset of field: fuse_setattr_in::bkuptime"]
        [::core::mem::offset_of!(fuse_setattr_in, bkuptime) - 88usize];
    ["Offset of field: fuse_setattr_in::chgtime"]
        [::core::mem::offset_of!(fuse_setattr_in, chgtime) - 96usize];
    ["Offset of field: fuse_setattr_in::crtime"]
        [::core::mem::offset_of!(fuse_setattr_in, crtime) - 104usize];
    ["Offset of field: fuse_setattr_in::bkuptimensec"]
        [::core::mem::offset_of!(fuse_setattr_in, bkuptimensec) - 112usize];
    ["Offset of field: fuse_setattr_in::chgtimensec"]
        [::core::mem::offset_of!(fuse_setattr_in, chgtimensec) - 116usize];
    ["Offset of field: fuse_setattr_in::crtimensec"]
        [::core::mem::offset_of!(fuse_setattr_in, crtimensec) - 120usize];
    ["Offset of field: fuse_setattr_in::flags"]
        [::core::mem::offset_of!(fuse_setattr_in, flags) - 124usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_open_in {
    pub flags: u32,
    pub unused: u32,
}
const _: () = {
    ["Size of fuse_open_in"][::core::mem::size_of::<fuse_open_in>() - 8usize];
    ["Alignment of fuse_open_in"][::core::mem::align_of::<fuse_open_in>() - 4usize];
    ["Offset of field: fuse_open_in::flags"][::core::mem::offset_of!(fuse_open_in, flags) - 0usize];
    ["Offset of field: fuse_open_in::unused"]
        [::core::mem::offset_of!(fuse_open_in, unused) - 4usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_create_in {
    pub flags: u32,
    pub mode: u32,
    pub umask: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_create_in"][::core::mem::size_of::<fuse_create_in>() - 16usize];
    ["Alignment of fuse_create_in"][::core::mem::align_of::<fuse_create_in>() - 4usize];
    ["Offset of field: fuse_create_in::flags"]
        [::core::mem::offset_of!(fuse_create_in, flags) - 0usize];
    ["Offset of field: fuse_create_in::mode"]
        [::core::mem::offset_of!(fuse_create_in, mode) - 4usize];
    ["Offset of field: fuse_create_in::umask"]
        [::core::mem::offset_of!(fuse_create_in, umask) - 8usize];
    ["Offset of field: fuse_create_in::padding"]
        [::core::mem::offset_of!(fuse_create_in, padding) - 12usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_open_out {
    pub fh: u64,
    pub open_flags: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_open_out"][::core::mem::size_of::<fuse_open_out>() - 16usize];
    ["Alignment of fuse_open_out"][::core::mem::align_of::<fuse_open_out>() - 8usize];
    ["Offset of field: fuse_open_out::fh"][::core::mem::offset_of!(fuse_open_out, fh) - 0usize];
    ["Offset of field: fuse_open_out::open_flags"]
        [::core::mem::offset_of!(fuse_open_out, open_flags) - 8usize];
    ["Offset of field: fuse_open_out::padding"]
        [::core::mem::offset_of!(fuse_open_out, padding) - 12usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_release_in {
    pub fh: u64,
    pub flags: u32,
    pub release_flags: u32,
    pub lock_owner: u64,
}
const _: () = {
    ["Size of fuse_release_in"][::core::mem::size_of::<fuse_release_in>() - 24usize];
    ["Alignment of fuse_release_in"][::core::mem::align_of::<fuse_release_in>() - 8usize];
    ["Offset of field: fuse_release_in::fh"][::core::mem::offset_of!(fuse_release_in, fh) - 0usize];
    ["Offset of field: fuse_release_in::flags"]
        [::core::mem::offset_of!(fuse_release_in, flags) - 8usize];
    ["Offset of field: fuse_release_in::release_flags"]
        [::core::mem::offset_of!(fuse_release_in, release_flags) - 12usize];
    ["Offset of field: fuse_release_in::lock_owner"]
        [::core::mem::offset_of!(fuse_release_in, lock_owner) - 16usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_flush_in {
    pub fh: u64,
    pub unused: u32,
    pub padding: u32,
    pub lock_owner: u64,
}
const _: () = {
    ["Size of fuse_flush_in"][::core::mem::size_of::<fuse_flush_in>() - 24usize];
    ["Alignment of fuse_flush_in"][::core::mem::align_of::<fuse_flush_in>() - 8usize];
    ["Offset of field: fuse_flush_in::fh"][::core::mem::offset_of!(fuse_flush_in, fh) - 0usize];
    ["Offset of field: fuse_flush_in::unused"]
        [::core::mem::offset_of!(fuse_flush_in, unused) - 8usize];
    ["Offset of field: fuse_flush_in::padding"]
        [::core::mem::offset_of!(fuse_flush_in, padding) - 12usize];
    ["Offset of field: fuse_flush_in::lock_owner"]
        [::core::mem::offset_of!(fuse_flush_in, lock_owner) - 16usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_read_in {
    pub fh: u64,
    pub offset: u64,
    pub size: u32,
    pub read_flags: u32,
    pub lock_owner: u64,
    pub flags: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_read_in"][::core::mem::size_of::<fuse_read_in>() - 40usize];
    ["Alignment of fuse_read_in"][::core::mem::align_of::<fuse_read_in>() - 8usize];
    ["Offset of field: fuse_read_in::fh"][::core::mem::offset_of!(fuse_read_in, fh) - 0usize];
    ["Offset of field: fuse_read_in::offset"]
        [::core::mem::offset_of!(fuse_read_in, offset) - 8usize];
    ["Offset of field: fuse_read_in::size"][::core::mem::offset_of!(fuse_read_in, size) - 16usize];
    ["Offset of field: fuse_read_in::read_flags"]
        [::core::mem::offset_of!(fuse_read_in, read_flags) - 20usize];
    ["Offset of field: fuse_read_in::lock_owner"]
        [::core::mem::offset_of!(fuse_read_in, lock_owner) - 24usize];
    ["Offset of field: fuse_read_in::flags"]
        [::core::mem::offset_of!(fuse_read_in, flags) - 32usize];
    ["Offset of field: fuse_read_in::padding"]
        [::core::mem::offset_of!(fuse_read_in, padding) - 36usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_write_in {
    pub fh: u64,
    pub offset: u64,
    pub size: u32,
    pub write_flags: u32,
    pub lock_owner: u64,
    pub flags: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_write_in"][::core::mem::size_of::<fuse_write_in>() - 40usize];
    ["Alignment of fuse_write_in"][::core::mem::align_of::<fuse_write_in>() - 8usize];
    ["Offset of field: fuse_write_in::fh"][::core::mem::offset_of!(fuse_write_in, fh) - 0usize];
    ["Offset of field: fuse_write_in::offset"]
        [::core::mem::offset_of!(fuse_write_in, offset) - 8usize];
    ["Offset of field: fuse_write_in::size"]
        [::core::mem::offset_of!(fuse_write_in, size) - 16usize];
    ["Offset of field: fuse_write_in::write_flags"]
        [::core::mem::offset_of!(fuse_write_in, write_flags) - 20usize];
    ["Offset of field: fuse_write_in::lock_owner"]
        [::core::mem::offset_of!(fuse_write_in, lock_owner) - 24usize];
    ["Offset of field: fuse_write_in::flags"]
        [::core::mem::offset_of!(fuse_write_in, flags) - 32usize];
    ["Offset of field: fuse_write_in::padding"]
        [::core::mem::offset_of!(fuse_write_in, padding) - 36usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_write_out {
    pub size: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_write_out"][::core::mem::size_of::<fuse_write_out>() - 8usize];
    ["Alignment of fuse_write_out"][::core::mem::align_of::<fuse_write_out>() - 4usize];
    ["Offset of field: fuse_write_out::size"]
        [::core::mem::offset_of!(fuse_write_out, size) - 0usize];
    ["Offset of field: fuse_write_out::padding"]
        [::core::mem::offset_of!(fuse_write_out, padding) - 4usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_statfs_out {
    pub st: fuse_kstatfs,
}
const _: () = {
    ["Size of fuse_statfs_out"][::core::mem::size_of::<fuse_statfs_out>() - 80usize];
    ["Alignment of fuse_statfs_out"][::core::mem::align_of::<fuse_statfs_out>() - 8usize];
    ["Offset of field: fuse_statfs_out::st"][::core::mem::offset_of!(fuse_statfs_out, st) - 0usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_fsync_in {
    pub fh: u64,
    pub fsync_flags: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_fsync_in"][::core::mem::size_of::<fuse_fsync_in>() - 16usize];
    ["Alignment of fuse_fsync_in"][::core::mem::align_of::<fuse_fsync_in>() - 8usize];
    ["Offset of field: fuse_fsync_in::fh"][::core::mem::offset_of!(fuse_fsync_in, fh) - 0usize];
    ["Offset of field: fuse_fsync_in::fsync_flags"]
        [::core::mem::offset_of!(fuse_fsync_in, fsync_flags) - 8usize];
    ["Offset of field: fuse_fsync_in::padding"]
        [::core::mem::offset_of!(fuse_fsync_in, padding) - 12usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_setxattr_in {
    pub size: u32,
    pub flags: u32,
    pub position: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_setxattr_in"][::core::mem::size_of::<fuse_setxattr_in>() - 16usize];
    ["Alignment of fuse_setxattr_in"][::core::mem::align_of::<fuse_setxattr_in>() - 4usize];
    ["Offset of field: fuse_setxattr_in::size"]
        [::core::mem::offset_of!(fuse_setxattr_in, size) - 0usize];
    ["Offset of field: fuse_setxattr_in::flags"]
        [::core::mem::offset_of!(fuse_setxattr_in, flags) - 4usize];
    ["Offset of field: fuse_setxattr_in::position"]
        [::core::mem::offset_of!(fuse_setxattr_in, position) - 8usize];
    ["Offset of field: fuse_setxattr_in::padding"]
        [::core::mem::offset_of!(fuse_setxattr_in, padding) - 12usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_getxattr_in {
    pub size: u32,
    pub padding: u32,
    pub position: u32,
    pub padding2: u32,
}
const _: () = {
    ["Size of fuse_getxattr_in"][::core::mem::size_of::<fuse_getxattr_in>() - 16usize];
    ["Alignment of fuse_getxattr_in"][::core::mem::align_of::<fuse_getxattr_in>() - 4usize];
    ["Offset of field: fuse_getxattr_in::size"]
        [::core::mem::offset_of!(fuse_getxattr_in, size) - 0usize];
    ["Offset of field: fuse_getxattr_in::padding"]
        [::core::mem::offset_of!(fuse_getxattr_in, padding) - 4usize];
    ["Offset of field: fuse_getxattr_in::position"]
        [::core::mem::offset_of!(fuse_getxattr_in, position) - 8usize];
    ["Offset of field: fuse_getxattr_in::padding2"]
        [::core::mem::offset_of!(fuse_getxattr_in, padding2) - 12usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_getxattr_out {
    pub size: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_getxattr_out"][::core::mem::size_of::<fuse_getxattr_out>() - 8usize];
    ["Alignment of fuse_getxattr_out"][::core::mem::align_of::<fuse_getxattr_out>() - 4usize];
    ["Offset of field: fuse_getxattr_out::size"]
        [::core::mem::offset_of!(fuse_getxattr_out, size) - 0usize];
    ["Offset of field: fuse_getxattr_out::padding"]
        [::core::mem::offset_of!(fuse_getxattr_out, padding) - 4usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_lk_in {
    pub fh: u64,
    pub owner: u64,
    pub lk: fuse_file_lock,
    pub lk_flags: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_lk_in"][::core::mem::size_of::<fuse_lk_in>() - 48usize];
    ["Alignment of fuse_lk_in"][::core::mem::align_of::<fuse_lk_in>() - 8usize];
    ["Offset of field: fuse_lk_in::fh"][::core::mem::offset_of!(fuse_lk_in, fh) - 0usize];
    ["Offset of field: fuse_lk_in::owner"][::core::mem::offset_of!(fuse_lk_in, owner) - 8usize];
    ["Offset of field: fuse_lk_in::lk"][::core::mem::offset_of!(fuse_lk_in, lk) - 16usize];
    ["Offset of field: fuse_lk_in::lk_flags"]
        [::core::mem::offset_of!(fuse_lk_in, lk_flags) - 40usize];
    ["Offset of field: fuse_lk_in::padding"]
        [::core::mem::offset_of!(fuse_lk_in, padding) - 44usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_lk_out {
    pub lk: fuse_file_lock,
}
const _: () = {
    ["Size of fuse_lk_out"][::core::mem::size_of::<fuse_lk_out>() - 24usize];
    ["Alignment of fuse_lk_out"][::core::mem::align_of::<fuse_lk_out>() - 8usize];
    ["Offset of field: fuse_lk_out::lk"][::core::mem::offset_of!(fuse_lk_out, lk) - 0usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_access_in {
    pub mask: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_access_in"][::core::mem::size_of::<fuse_access_in>() - 8usize];
    ["Alignment of fuse_access_in"][::core::mem::align_of::<fuse_access_in>() - 4usize];
    ["Offset of field: fuse_access_in::mask"]
        [::core::mem::offset_of!(fuse_access_in, mask) - 0usize];
    ["Offset of field: fuse_access_in::padding"]
        [::core::mem::offset_of!(fuse_access_in, padding) - 4usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_init_in {
    pub major: u32,
    pub minor: u32,
    pub max_readahead: u32,
    pub flags: u32,
}
const _: () = {
    ["Size of fuse_init_in"][::core::mem::size_of::<fuse_init_in>() - 16usize];
    ["Alignment of fuse_init_in"][::core::mem::align_of::<fuse_init_in>() - 4usize];
    ["Offset of field: fuse_init_in::major"][::core::mem::offset_of!(fuse_init_in, major) - 0usize];
    ["Offset of field: fuse_init_in::minor"][::core::mem::offset_of!(fuse_init_in, minor) - 4usize];
    ["Offset of field: fuse_init_in::max_readahead"]
        [::core::mem::offset_of!(fuse_init_in, max_readahead) - 8usize];
    ["Offset of field: fuse_init_in::flags"]
        [::core::mem::offset_of!(fuse_init_in, flags) - 12usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_init_out {
    pub major: u32,
    pub minor: u32,
    pub max_readahead: u32,
    pub flags: u32,
    pub max_background: u16,
    pub congestion_threshold: u16,
    pub max_write: u32,
}
const _: () = {
    ["Size of fuse_init_out"][::core::mem::size_of::<fuse_init_out>() - 24usize];
    ["Alignment of fuse_init_out"][::core::mem::align_of::<fuse_init_out>() - 4usize];
    ["Offset of field: fuse_init_out::major"]
        [::core::mem::offset_of!(fuse_init_out, major) - 0usize];
    ["Offset of field: fuse_init_out::minor"]
        [::core::mem::offset_of!(fuse_init_out, minor) - 4usize];
    ["Offset of field: fuse_init_out::max_readahead"]
        [::core::mem::offset_of!(fuse_init_out, max_readahead) - 8usize];
    ["Offset of field: fuse_init_out::flags"]
        [::core::mem::offset_of!(fuse_init_out, flags) - 12usize];
    ["Offset of field: fuse_init_out::max_background"]
        [::core::mem::offset_of!(fuse_init_out, max_background) - 16usize];
    ["Offset of field: fuse_init_out::congestion_threshold"]
        [::core::mem::offset_of!(fuse_init_out, congestion_threshold) - 18usize];
    ["Offset of field: fuse_init_out::max_write"]
        [::core::mem::offset_of!(fuse_init_out, max_write) - 20usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct cuse_init_in {
    pub major: u32,
    pub minor: u32,
    pub unused: u32,
    pub flags: u32,
}
const _: () = {
    ["Size of cuse_init_in"][::core::mem::size_of::<cuse_init_in>() - 16usize];
    ["Alignment of cuse_init_in"][::core::mem::align_of::<cuse_init_in>() - 4usize];
    ["Offset of field: cuse_init_in::major"][::core::mem::offset_of!(cuse_init_in, major) - 0usize];
    ["Offset of field: cuse_init_in::minor"][::core::mem::offset_of!(cuse_init_in, minor) - 4usize];
    ["Offset of field: cuse_init_in::unused"]
        [::core::mem::offset_of!(cuse_init_in, unused) - 8usize];
    ["Offset of field: cuse_init_in::flags"]
        [::core::mem::offset_of!(cuse_init_in, flags) - 12usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct cuse_init_out {
    pub major: u32,
    pub minor: u32,
    pub unused: u32,
    pub flags: u32,
    pub max_read: u32,
    pub max_write: u32,
    pub dev_major: u32,
    pub dev_minor: u32,
    pub spare: [u32; 10usize],
}
const _: () = {
    ["Size of cuse_init_out"][::core::mem::size_of::<cuse_init_out>() - 72usize];
    ["Alignment of cuse_init_out"][::core::mem::align_of::<cuse_init_out>() - 4usize];
    ["Offset of field: cuse_init_out::major"]
        [::core::mem::offset_of!(cuse_init_out, major) - 0usize];
    ["Offset of field: cuse_init_out::minor"]
        [::core::mem::offset_of!(cuse_init_out, minor) - 4usize];
    ["Offset of field: cuse_init_out::unused"]
        [::core::mem::offset_of!(cuse_init_out, unused) - 8usize];
    ["Offset of field: cuse_init_out::flags"]
        [::core::mem::offset_of!(cuse_init_out, flags) - 12usize];
    ["Offset of field: cuse_init_out::max_read"]
        [::core::mem::offset_of!(cuse_init_out, max_read) - 16usize];
    ["Offset of field: cuse_init_out::max_write"]
        [::core::mem::offset_of!(cuse_init_out, max_write) - 20usize];
    ["Offset of field: cuse_init_out::dev_major"]
        [::core::mem::offset_of!(cuse_init_out, dev_major) - 24usize];
    ["Offset of field: cuse_init_out::dev_minor"]
        [::core::mem::offset_of!(cuse_init_out, dev_minor) - 28usize];
    ["Offset of field: cuse_init_out::spare"]
        [::core::mem::offset_of!(cuse_init_out, spare) - 32usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_interrupt_in {
    pub unique: u64,
}
const _: () = {
    ["Size of fuse_interrupt_in"][::core::mem::size_of::<fuse_interrupt_in>() - 8usize];
    ["Alignment of fuse_interrupt_in"][::core::mem::align_of::<fuse_interrupt_in>() - 8usize];
    ["Offset of field: fuse_interrupt_in::unique"]
        [::core::mem::offset_of!(fuse_interrupt_in, unique) - 0usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_bmap_in {
    pub block: u64,
    pub blocksize: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_bmap_in"][::core::mem::size_of::<fuse_bmap_in>() - 16usize];
    ["Alignment of fuse_bmap_in"][::core::mem::align_of::<fuse_bmap_in>() - 8usize];
    ["Offset of field: fuse_bmap_in::block"][::core::mem::offset_of!(fuse_bmap_in, block) - 0usize];
    ["Offset of field: fuse_bmap_in::blocksize"]
        [::core::mem::offset_of!(fuse_bmap_in, blocksize) - 8usize];
    ["Offset of field: fuse_bmap_in::padding"]
        [::core::mem::offset_of!(fuse_bmap_in, padding) - 12usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_bmap_out {
    pub block: u64,
}
const _: () = {
    ["Size of fuse_bmap_out"][::core::mem::size_of::<fuse_bmap_out>() - 8usize];
    ["Alignment of fuse_bmap_out"][::core::mem::align_of::<fuse_bmap_out>() - 8usize];
    ["Offset of field: fuse_bmap_out::block"]
        [::core::mem::offset_of!(fuse_bmap_out, block) - 0usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_ioctl_in {
    pub fh: u64,
    pub flags: u32,
    pub cmd: u32,
    pub arg: u64,
    pub in_size: u32,
    pub out_size: u32,
}
const _: () = {
    ["Size of fuse_ioctl_in"][::core::mem::size_of::<fuse_ioctl_in>() - 32usize];
    ["Alignment of fuse_ioctl_in"][::core::mem::align_of::<fuse_ioctl_in>() - 8usize];
    ["Offset of field: fuse_ioctl_in::fh"][::core::mem::offset_of!(fuse_ioctl_in, fh) - 0usize];
    ["Offset of field: fuse_ioctl_in::flags"]
        [::core::mem::offset_of!(fuse_ioctl_in, flags) - 8usize];
    ["Offset of field: fuse_ioctl_in::cmd"][::core::mem::offset_of!(fuse_ioctl_in, cmd) - 12usize];
    ["Offset of field: fuse_ioctl_in::arg"][::core::mem::offset_of!(fuse_ioctl_in, arg) - 16usize];
    ["Offset of field: fuse_ioctl_in::in_size"]
        [::core::mem::offset_of!(fuse_ioctl_in, in_size) - 24usize];
    ["Offset of field: fuse_ioctl_in::out_size"]
        [::core::mem::offset_of!(fuse_ioctl_in, out_size) - 28usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_ioctl_iovec {
    pub base: u64,
    pub len: u64,
}
const _: () = {
    ["Size of fuse_ioctl_iovec"][::core::mem::size_of::<fuse_ioctl_iovec>() - 16usize];
    ["Alignment of fuse_ioctl_iovec"][::core::mem::align_of::<fuse_ioctl_iovec>() - 8usize];
    ["Offset of field: fuse_ioctl_iovec::base"]
        [::core::mem::offset_of!(fuse_ioctl_iovec, base) - 0usize];
    ["Offset of field: fuse_ioctl_iovec::len"]
        [::core::mem::offset_of!(fuse_ioctl_iovec, len) - 8usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_ioctl_out {
    pub result: i32,
    pub flags: u32,
    pub in_iovs: u32,
    pub out_iovs: u32,
}
const _: () = {
    ["Size of fuse_ioctl_out"][::core::mem::size_of::<fuse_ioctl_out>() - 16usize];
    ["Alignment of fuse_ioctl_out"][::core::mem::align_of::<fuse_ioctl_out>() - 4usize];
    ["Offset of field: fuse_ioctl_out::result"]
        [::core::mem::offset_of!(fuse_ioctl_out, result) - 0usize];
    ["Offset of field: fuse_ioctl_out::flags"]
        [::core::mem::offset_of!(fuse_ioctl_out, flags) - 4usize];
    ["Offset of field: fuse_ioctl_out::in_iovs"]
        [::core::mem::offset_of!(fuse_ioctl_out, in_iovs) - 8usize];
    ["Offset of field: fuse_ioctl_out::out_iovs"]
        [::core::mem::offset_of!(fuse_ioctl_out, out_iovs) - 12usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_poll_in {
    pub fh: u64,
    pub kh: u64,
    pub flags: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_poll_in"][::core::mem::size_of::<fuse_poll_in>() - 24usize];
    ["Alignment of fuse_poll_in"][::core::mem::align_of::<fuse_poll_in>() - 8usize];
    ["Offset of field: fuse_poll_in::fh"][::core::mem::offset_of!(fuse_poll_in, fh) - 0usize];
    ["Offset of field: fuse_poll_in::kh"][::core::mem::offset_of!(fuse_poll_in, kh) - 8usize];
    ["Offset of field: fuse_poll_in::flags"]
        [::core::mem::offset_of!(fuse_poll_in, flags) - 16usize];
    ["Offset of field: fuse_poll_in::padding"]
        [::core::mem::offset_of!(fuse_poll_in, padding) - 20usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_poll_out {
    pub revents: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_poll_out"][::core::mem::size_of::<fuse_poll_out>() - 8usize];
    ["Alignment of fuse_poll_out"][::core::mem::align_of::<fuse_poll_out>() - 4usize];
    ["Offset of field: fuse_poll_out::revents"]
        [::core::mem::offset_of!(fuse_poll_out, revents) - 0usize];
    ["Offset of field: fuse_poll_out::padding"]
        [::core::mem::offset_of!(fuse_poll_out, padding) - 4usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_notify_poll_wakeup_out {
    pub kh: u64,
}
const _: () = {
    ["Size of fuse_notify_poll_wakeup_out"]
        [::core::mem::size_of::<fuse_notify_poll_wakeup_out>() - 8usize];
    ["Alignment of fuse_notify_poll_wakeup_out"]
        [::core::mem::align_of::<fuse_notify_poll_wakeup_out>() - 8usize];
    ["Offset of field: fuse_notify_poll_wakeup_out::kh"]
        [::core::mem::offset_of!(fuse_notify_poll_wakeup_out, kh) - 0usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_fallocate_in {
    pub fh: u64,
    pub offset: u64,
    pub length: u64,
    pub mode: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_fallocate_in"][::core::mem::size_of::<fuse_fallocate_in>() - 32usize];
    ["Alignment of fuse_fallocate_in"][::core::mem::align_of::<fuse_fallocate_in>() - 8usize];
    ["Offset of field: fuse_fallocate_in::fh"]
        [::core::mem::offset_of!(fuse_fallocate_in, fh) - 0usize];
    ["Offset of field: fuse_fallocate_in::offset"]
        [::core::mem::offset_of!(fuse_fallocate_in, offset) - 8usize];
    ["Offset of field: fuse_fallocate_in::length"]
        [::core::mem::offset_of!(fuse_fallocate_in, length) - 16usize];
    ["Offset of field: fuse_fallocate_in::mode"]
        [::core::mem::offset_of!(fuse_fallocate_in, mode) - 24usize];
    ["Offset of field: fuse_fallocate_in::padding"]
        [::core::mem::offset_of!(fuse_fallocate_in, padding) - 28usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_in_header {
    pub len: u32,
    pub opcode: u32,
    pub unique: u64,
    pub nodeid: u64,
    pub uid: u32,
    pub gid: u32,
    pub pid: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_in_header"][::core::mem::size_of::<fuse_in_header>() - 40usize];
    ["Alignment of fuse_in_header"][::core::mem::align_of::<fuse_in_header>() - 8usize];
    ["Offset of field: fuse_in_header::len"][::core::mem::offset_of!(fuse_in_header, len) - 0usize];
    ["Offset of field: fuse_in_header::opcode"]
        [::core::mem::offset_of!(fuse_in_header, opcode) - 4usize];
    ["Offset of field: fuse_in_header::unique"]
        [::core::mem::offset_of!(fuse_in_header, unique) - 8usize];
    ["Offset of field: fuse_in_header::nodeid"]
        [::core::mem::offset_of!(fuse_in_header, nodeid) - 16usize];
    ["Offset of field: fuse_in_header::uid"]
        [::core::mem::offset_of!(fuse_in_header, uid) - 24usize];
    ["Offset of field: fuse_in_header::gid"]
        [::core::mem::offset_of!(fuse_in_header, gid) - 28usize];
    ["Offset of field: fuse_in_header::pid"]
        [::core::mem::offset_of!(fuse_in_header, pid) - 32usize];
    ["Offset of field: fuse_in_header::padding"]
        [::core::mem::offset_of!(fuse_in_header, padding) - 36usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_out_header {
    pub len: u32,
    pub error: i32,
    pub unique: u64,
}
const _: () = {
    ["Size of fuse_out_header"][::core::mem::size_of::<fuse_out_header>() - 16usize];
    ["Alignment of fuse_out_header"][::core::mem::align_of::<fuse_out_header>() - 8usize];
    ["Offset of field: fuse_out_header::len"]
        [::core::mem::offset_of!(fuse_out_header, len) - 0usize];
    ["Offset of field: fuse_out_header::error"]
        [::core::mem::offset_of!(fuse_out_header, error) - 4usize];
    ["Offset of field: fuse_out_header::unique"]
        [::core::mem::offset_of!(fuse_out_header, unique) - 8usize];
};
#[repr(C)]
#[derive(Debug, Default)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_dirent {
    pub ino: u64,
    pub off: u64,
    pub namelen: u32,
    pub type_: u32,
    pub name: __IncompleteArrayField<::core::ffi::c_char>,
}
const _: () = {
    ["Size of fuse_dirent"][::core::mem::size_of::<fuse_dirent>() - 24usize];
    ["Alignment of fuse_dirent"][::core::mem::align_of::<fuse_dirent>() - 8usize];
    ["Offset of field: fuse_dirent::ino"][::core::mem::offset_of!(fuse_dirent, ino) - 0usize];
    ["Offset of field: fuse_dirent::off"][::core::mem::offset_of!(fuse_dirent, off) - 8usize];
    ["Offset of field: fuse_dirent::namelen"]
        [::core::mem::offset_of!(fuse_dirent, namelen) - 16usize];
    ["Offset of field: fuse_dirent::type_"][::core::mem::offset_of!(fuse_dirent, type_) - 20usize];
    ["Offset of field: fuse_dirent::name"][::core::mem::offset_of!(fuse_dirent, name) - 24usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_notify_inval_inode_out {
    pub ino: u64,
    pub off: i64,
    pub len: i64,
}
const _: () = {
    ["Size of fuse_notify_inval_inode_out"]
        [::core::mem::size_of::<fuse_notify_inval_inode_out>() - 24usize];
    ["Alignment of fuse_notify_inval_inode_out"]
        [::core::mem::align_of::<fuse_notify_inval_inode_out>() - 8usize];
    ["Offset of field: fuse_notify_inval_inode_out::ino"]
        [::core::mem::offset_of!(fuse_notify_inval_inode_out, ino) - 0usize];
    ["Offset of field: fuse_notify_inval_inode_out::off"]
        [::core::mem::offset_of!(fuse_notify_inval_inode_out, off) - 8usize];
    ["Offset of field: fuse_notify_inval_inode_out::len"]
        [::core::mem::offset_of!(fuse_notify_inval_inode_out, len) - 16usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_notify_inval_entry_out {
    pub parent: u64,
    pub namelen: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_notify_inval_entry_out"]
        [::core::mem::size_of::<fuse_notify_inval_entry_out>() - 16usize];
    ["Alignment of fuse_notify_inval_entry_out"]
        [::core::mem::align_of::<fuse_notify_inval_entry_out>() - 8usize];
    ["Offset of field: fuse_notify_inval_entry_out::parent"]
        [::core::mem::offset_of!(fuse_notify_inval_entry_out, parent) - 0usize];
    ["Offset of field: fuse_notify_inval_entry_out::namelen"]
        [::core::mem::offset_of!(fuse_notify_inval_entry_out, namelen) - 8usize];
    ["Offset of field: fuse_notify_inval_entry_out::padding"]
        [::core::mem::offset_of!(fuse_notify_inval_entry_out, padding) - 12usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_notify_delete_out {
    pub parent: u64,
    pub child: u64,
    pub namelen: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_notify_delete_out"][::core::mem::size_of::<fuse_notify_delete_out>() - 24usize];
    ["Alignment of fuse_notify_delete_out"]
        [::core::mem::align_of::<fuse_notify_delete_out>() - 8usize];
    ["Offset of field: fuse_notify_delete_out::parent"]
        [::core::mem::offset_of!(fuse_notify_delete_out, parent) - 0usize];
    ["Offset of field: fuse_notify_delete_out::child"]
        [::core::mem::offset_of!(fuse_notify_delete_out, child) - 8usize];
    ["Offset of field: fuse_notify_delete_out::namelen"]
        [::core::mem::offset_of!(fuse_notify_delete_out, namelen) - 16usize];
    ["Offset of field: fuse_notify_delete_out::padding"]
        [::core::mem::offset_of!(fuse_notify_delete_out, padding) - 20usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_notify_store_out {
    pub nodeid: u64,
    pub offset: u64,
    pub size: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_notify_store_out"][::core::mem::size_of::<fuse_notify_store_out>() - 24usize];
    ["Alignment of fuse_notify_store_out"]
        [::core::mem::align_of::<fuse_notify_store_out>() - 8usize];
    ["Offset of field: fuse_notify_store_out::nodeid"]
        [::core::mem::offset_of!(fuse_notify_store_out, nodeid) - 0usize];
    ["Offset of field: fuse_notify_store_out::offset"]
        [::core::mem::offset_of!(fuse_notify_store_out, offset) - 8usize];
    ["Offset of field: fuse_notify_store_out::size"]
        [::core::mem::offset_of!(fuse_notify_store_out, size) - 16usize];
    ["Offset of field: fuse_notify_store_out::padding"]
        [::core::mem::offset_of!(fuse_notify_store_out, padding) - 20usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_notify_retrieve_out {
    pub notify_unique: u64,
    pub nodeid: u64,
    pub offset: u64,
    pub size: u32,
    pub padding: u32,
}
const _: () = {
    ["Size of fuse_notify_retrieve_out"]
        [::core::mem::size_of::<fuse_notify_retrieve_out>() - 32usize];
    ["Alignment of fuse_notify_retrieve_out"]
        [::core::mem::align_of::<fuse_notify_retrieve_out>() - 8usize];
    ["Offset of field: fuse_notify_retrieve_out::notify_unique"]
        [::core::mem::offset_of!(fuse_notify_retrieve_out, notify_unique) - 0usize];
    ["Offset of field: fuse_notify_retrieve_out::nodeid"]
        [::core::mem::offset_of!(fuse_notify_retrieve_out, nodeid) - 8usize];
    ["Offset of field: fuse_notify_retrieve_out::offset"]
        [::core::mem::offset_of!(fuse_notify_retrieve_out, offset) - 16usize];
    ["Offset of field: fuse_notify_retrieve_out::size"]
        [::core::mem::offset_of!(fuse_notify_retrieve_out, size) - 24usize];
    ["Offset of field: fuse_notify_retrieve_out::padding"]
        [::core::mem::offset_of!(fuse_notify_retrieve_out, padding) - 28usize];
};
#[repr(C)]
#[derive(Debug, Default, Copy, Clone, Hash, PartialEq, Eq)]
#[cfg_attr(
    feature = "zerocopy",
    derive(
        zerocopy_derive::FromZeroes,
        zerocopy_derive::FromBytes,
        zerocopy_derive::AsBytes
    )
)]
pub struct fuse_notify_retrieve_in {
    pub dummy1: u64,
    pub offset: u64,
    pub size: u32,
    pub dummy2: u32,
    pub dummy3: u64,
    pub dummy4: u64,
}
const _: () = {
    ["Size of fuse_notify_retrieve_in"]
        [::core::mem::size_of::<fuse_notify_retrieve_in>() - 40usize];
    ["Alignment of fuse_notify_retrieve_in"]
        [::core::mem::align_of::<fuse_notify_retrieve_in>() - 8usize];
    ["Offset of field: fuse_notify_retrieve_in::dummy1"]
        [::core::mem::offset_of!(fuse_notify_retrieve_in, dummy1) - 0usize];
    ["Offset of field: fuse_notify_retrieve_in::offset"]
        [::core::mem::offset_of!(fuse_notify_retrieve_in, offset) - 8usize];
    ["Offset of field: fuse_notify_retrieve_in::size"]
        [::core::mem::offset_of!(fuse_notify_retrieve_in, size) - 16usize];
    ["Offset of field: fuse_notify_retrieve_in::dummy2"]
        [::core::mem::offset_of!(fuse_notify_retrieve_in, dummy2) - 20usize];
    ["Offset of field: fuse_notify_retrieve_in::dummy3"]
        [::core::mem::offset_of!(fuse_notify_retrieve_in, dummy3) - 24usize];
    ["Offset of field: fuse_notify_retrieve_in::dummy4"]
        [::core::mem::offset_of!(fuse_notify_retrieve_in, dummy4) - 32usize];
};
